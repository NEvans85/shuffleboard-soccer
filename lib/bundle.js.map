{"version":3,"sources":["webpack:///webpack/bootstrap 0845d91d5d2234f68062","webpack:///./lib/game.js","webpack:///./lib/environment.js","webpack:///./lib/Entities/circle.js","webpack:///./lib/Entities/entity.js","webpack:///./lib/render.js","webpack:///./lib/game_entities.js","webpack:///./lib/Entities/puck.js","webpack:///./lib/Entities/ball.js","webpack:///./lib/Entities/wall.js","webpack:///./lib/Entities/goal.js","webpack:///./lib/Entities/zone.js","webpack:///./lib/player.js","webpack:///./lib/collision_detector.js","webpack:///./lib/collision_resolver.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;AACuB;AACI;AACA;AACH;AACH;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;AC5CA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;ACjCA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAY,4DAA4D;AACxE,uEAAY,6DAA6D;AACzE;AACA;AACA;AAAA;AAAA;;;;;;;;;ACxCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChBA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACPA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;AClBA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0845d91d5d2234f68062","import Environment from \"./environment.js\";\nimport { gameEntities } from \"./game_entities\";\nimport { detectCollisions } from \"./collision_detector\";\nimport { resolveCollision } from \"./collision_resolver\";\nimport { render, clear } from \"./render\";\nimport { playerList } from \"./game_entities\";\n\n// Build and place the game area\nconst canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nconst context = canvas.getContext(\"2d\");\ncanvas.width = 1200;\ncanvas.height = 700;\ncanvas.setAttribute(\"style\", \"border: 1px solid black;\");\n\n// Initial environment population\nconst environment = new Environment();\ngameEntities.forEach(entity => {\n  environment.addEntity(entity);\n});\nconsole.log(environment.allEntities);\nenvironment.allEntities.forEach(entity => {\n  render(context, entity);\n});\n\n// environment.pucks[0].setVelocity([600, 400]);\n// environment.pucks[4].setVelocity([-300, 600]);\n\nwindow.requestAnimationFrame(() => {\n  nextFrame();\n});\nconst nextFrame = () => {\n  clear(canvas, context);\n  environment.allEntities.forEach(entity => {\n    entity.nextFrame;\n    render(context, entity);\n  });\n  const collisions = detectCollisions(environment);\n  collisions.forEach(collidingEntities => {\n    // console.log(collidingEntities);\n    resolveCollision(collidingEntities[0], collidingEntities[1]);\n  });\n  // console.log(environment.pucks[0]);\n  requestAnimationFrame(nextFrame);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","import Puck from \"./Entities/puck\";\n\nclass Environment {\n  constructor() {\n    this.entities = {};\n    this.newEntitiesId = 0;\n  }\n\n  addEntity(entity) {\n    const id = this.newEntitiesId;\n    entity.id = id;\n    this.entities[id] = entity;\n    this.newEntitiesId += 1;\n    return id;\n  }\n\n  removeEntity(entityId) {\n    deleted = this.entities[entityId];\n    delete this.entities[entityId];\n    return deleted;\n  }\n\n  get allEntities() {\n    return Object.values(this.entities);\n  }\n\n  get pucks() {\n    return this.allEntities.filter(entity => {\n      return entity instanceof Puck;\n    });\n  }\n}\n\nexport default Environment;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/environment.js\n// module id = 1\n// module chunks = 0","import Entity from \"./entity\";\nimport Wall from \"./wall\";\n\nclass Circle extends Entity {\n  constructor(initialParams) {\n    super(initialParams);\n    const defaultParams = { radius: 20 };\n    const newParams = Object.assign({}, defaultParams, initialParams);\n    this.radius = newParams.radius;\n  }\n\n  inCollisionWith(entity) {\n    if (entity instanceof Circle) {\n      const a = entity.posX - this.posX;\n      const b = entity.posY - this.posY;\n      const c = this.radius + entity.radius;\n      return c * c >= a * a + b * b;\n    } else if (entity instanceof Wall) {\n      let result;\n      if (entity.posX === entity.endPosX) {\n        result =\n          entity.posX <= this.posX + this.radius &&\n          entity.posX >= this.posX - this.radius;\n      } else {\n        result =\n          entity.posY <= this.posY + this.radius &&\n          entity.posY >= this.posY - this.radius;\n      }\n      return result;\n    }\n  }\n}\n\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/circle.js\n// module id = 2\n// module chunks = 0","class Entity {\n  constructor(initialParams) {\n    const defaultParams = {\n      posX: 0,\n      posY: 0,\n      velX: 0,\n      velY: 0,\n      mass: 10,\n      fill: \"#000000\",\n      owner: null\n    };\n\n    const newParams = Object.assign({}, defaultParams, initialParams);\n    this.posX = newParams.posX;\n    this.posY = newParams.posY;\n    this.velX = newParams.velX;\n    this.velY = newParams.velY;\n    this.frictionCoefficient = newParams.frictionCoefficient;\n    this.mass = newParams.mass;\n    this.fill = newParams.fill;\n    this.time = 16 / 1000;\n  }\n\n  get nextFrame() {\n    if (this.velX !== 0 || this.velY !== 0) {\n      this.applyKineticFriction();\n    }\n    [this.posX, this.posY] = this.nextPosition();\n    return this;\n  }\n\n  nextPosition() {\n    let posX = this.posX;\n    let posY = this.posY;\n    const velX = this.velX;\n    const velY = this.velY;\n\n    posX += velX * this.time;\n    posY += velY * this.time;\n    return [posX, posY];\n  }\n\n  // nextVelocity() {\n  //   let velX = this.velX;\n  //   let velY = this.velY;\n  //   const accX = this.accX;\n  //   const accY = this.accY;\n  //\n  //   velX += accX * this.time;\n  //   velY += accY * this.time;\n  //   return [velX, velY];\n  // }\n\n  // accelerate(accVector) {\n  //   let accX = this.accX;\n  //   let accY = this.accY;\n  //   const deltaAccX = accVector[0];\n  //   const deltaAccY = accVector[1];\n  //\n  //   accX += deltaAccX;\n  //   accY += deltaAccY;\n  //   [this.accX, this.accY] = [accX, accY];\n  // }\n\n  applyKineticFriction() {\n    this.velX *= this.frictionCoefficient;\n    this.velY *= this.frictionCoefficient;\n\n    if (this.velX < 1) {\n      this.velX = 0;\n    }\n    if (this.velY < 1) {\n      this.velY = 0;\n    }\n  }\n\n  setPosition(newPos) {\n    this.posX = newPos[0];\n    this.posY = newPos[1];\n  }\n\n  setVelocity(newVel) {\n    this.velX = newVel[0];\n    this.velY = newVel[1];\n  }\n\n  // setAcceleration(newAcc) {\n  //   this.acceleration = newAcc;\n  // }\n\n  setFill(newFill) {\n    this.fill = newFill;\n  }\n}\n\nexport default Entity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/entity.js\n// module id = 3\n// module chunks = 0","import Circle from \"./Entities/circle\";\nimport Wall from \"./Entities/wall\";\nimport Zone from \"./Entities/zone\";\n\nexport const render = (context, entity) => {\n  if (entity instanceof Circle) {\n    context.beginPath();\n    context.arc(entity.posX, entity.posY, entity.radius, 0, 2 * Math.PI, false);\n    context.fillStyle = entity.fill;\n    context.fill();\n    context.lineWidth = 3;\n    context.strokeStyle = \"black\";\n    context.stroke();\n  }\n  if (entity instanceof Wall) {\n    context.beginPath();\n    context.moveTo(entity.posX, entity.posY);\n    context.lineTo(entity.endPosX, entity.endPosY);\n    context.stroke();\n  }\n  if (entity instanceof Zone) {\n    context.beginPath();\n    context.rect(entity.posX, entity.posY, entity.width, entity.height);\n    context.fillStyle = entity.fill;\n    context.lineWidth = 1;\n    context.strokeStyle = \"black\";\n    context.stroke();\n  }\n};\n\nexport const clear = (canvas, context) => {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/render.js\n// module id = 5\n// module chunks = 0","import Puck from \"./Entities/puck\";\nimport Ball from \"./Entities/ball\";\nimport Wall from \"./Entities/wall\";\nimport Goal from \"./Entities/goal\";\nimport Player from \"./player\";\n\nconst p1 = new Player(\"player1\", \"red\");\nconst p2 = new Player(\"player2\", \"blue\");\nexport const playerList = [p1, p2];\nconst pucks = [\n  new Puck([220, 260], p1),\n  new Puck([220, 390], p1),\n  new Puck([360, 200], p1),\n  new Puck([360, 450], p1),\n  new Puck([400, 325], p1),\n  new Puck([600, 325], p2),\n  new Puck([640, 200], p2),\n  new Puck([640, 450], p2),\n  new Puck([780, 260], p2),\n  new Puck([780, 390], p2)\n];\nconst walls = [\n  new Wall([150, 100], [850, 100]),\n  new Wall([150, 100], [150, 240]),\n  new Wall([150, 240], [75, 240]),\n  new Wall([75, 240], [75, 410]),\n  new Wall([75, 410], [150, 410]),\n  new Wall([150, 410], [150, 550]),\n  new Wall([150, 550], [850, 550]),\n  new Wall([850, 550], [850, 410]),\n  new Wall([850, 410], [925, 410]),\n  new Wall([925, 410], [925, 240]),\n  new Wall([925, 240], [850, 240]),\n  new Wall([850, 240], [850, 100])\n];\nconst zones = [\n  new Goal({ posX: 75, posY: 240, height: 170, width: 75, fill: \"grey\" }),\n  new Goal({ posX: 850, posY: 240, height: 170, width: 75, fill: \"grey\" })\n];\nconst ball = [new Ball([500, 325])];\nexport const gameEntities = pucks.concat(walls, zones, ball);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_entities.js\n// module id = 6\n// module chunks = 0","import Circle from \"./circle\";\n\nclass Puck extends Circle {\n  constructor(pos, owner) {\n    const params = {\n      radius: 25,\n      mass: 10,\n      posX: pos[0],\n      posY: pos[1],\n      frictionCoefficient: 0.99,\n      owner: owner,\n      fill: owner.color\n    };\n    super(params);\n  }\n}\n\nexport default Puck;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/puck.js\n// module id = 7\n// module chunks = 0","import Circle from \"./circle\";\n\nclass Ball extends Circle {\n  constructor(pos) {\n    const params = {\n      posX: pos[0],\n      posY: pos[1],\n      radius: 15,\n      fill: \"white\",\n      mass: 5,\n      frictionCoefficient: 0.993\n    };\n    super(params);\n  }\n}\n\nexport default Ball;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/ball.js\n// module id = 8\n// module chunks = 0","import Entity from \"./entity.js\";\n\nclass Wall extends Entity {\n  constructor(startPos, endPos) {\n    const params = { posX: startPos[0], posY: startPos[1] };\n    super(params);\n    this.endPosX = endPos[0];\n    this.endPosY = endPos[1];\n  }\n}\n\nexport default Wall;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/wall.js\n// module id = 9\n// module chunks = 0","import Zone from \"./zone\";\n\nclass Goal extends Zone {\n  constructor(initialParams) {\n    super(initialParams);\n  }\n}\n\nexport default Goal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/goal.js\n// module id = 10\n// module chunks = 0","class Zone {\n  constructor(initialParams) {\n    const defaultParams = {\n      posX: 0,\n      posY: 0,\n      height: 600,\n      width: 400\n    };\n    const newParams = Object.assign({}, defaultParams, initialParams);\n    this.height = newParams.height;\n    this.width = newParams.width;\n    this.posX = newParams.posX;\n    this.posY = newParams.posY;\n    this.fill = newParams.fill;\n  }\n\n  contains(object) {\n    if (object instanceof Circle) {\n      return (\n        this.posX <= object.posX - object.radius &&\n        this.posX + this.width >= object.posX + object.radius &&\n        this.posY <= object.posY - object.radius &&\n        this.posY + this.height >= object.posY + object.radius\n      );\n    }\n  }\n}\n\nexport default Zone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/zone.js\n// module id = 11\n// module chunks = 0","class Player {\n  constructor(name, color) {\n    this.name = name;\n    this.color = color;\n  }\n}\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 12\n// module chunks = 0","import Circle from \"./Entities/circle\";\n\nexport const detectCollisions = environment => {\n  const entities = environment.allEntities;\n  const count = entities.length;\n  const collisions = [];\n  for (var i = 0; i < count; i++) {\n    for (var j = i + 1; j < count - 1; j++) {\n      if (\n        entities[i] instanceof Circle &&\n        entities[i].inCollisionWith(entities[j])\n      ) {\n        collisions.push([entities[i], entities[j]]);\n        // console.log(collisions);\n      }\n    }\n  }\n  return collisions;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collision_detector.js\n// module id = 13\n// module chunks = 0","import Circle from \"./Entities/circle\";\nimport Wall from \"./Entities/wall\";\n\nexport const resolveCollision = (circle, other) => {\n  // const [pocX, pocY] = findPointOfContact(circle, other);\n  if (other instanceof Circle) {\n    resolveCirCirCollision(circle, other);\n  } else if (other instanceof Wall) {\n    resolveCirWallCollision(circle, other);\n  }\n};\n\nconst resolveCirWallCollision = (circle, wall) => {\n  if (wall.posX === wall.endPosX) {\n    circle.velX *= -1;\n  } else {\n    circle.velY *= -1;\n  }\n};\n// trig version\n\nconst resolveCirCirCollision = (circle1, circle2) => {\n  const c1VelMag = pythagoreanResult(circle1.velX, circle1.velY);\n  const c2VelMag = pythagoreanResult(circle2.velX, circle2.velY);\n  const poc = findPointOfContact(circle1, circle2);\n  const aoc = findAngleOfCollision(circle1, poc);\n  const c1Angle = calcAngle(circle1.velX, circle1.velY, c1VelMag);\n  const c2Angle = calcAngle(circle2.velX, circle2.velY, c2VelMag);\n  circle1.setVelocity(\n    calcNewVel(\n      circle1.mass,\n      circle2.mass,\n      c1Angle,\n      c2Angle,\n      c1VelMag,\n      c2VelMag,\n      aoc\n    )\n  );\n  circle2.setVelocity(\n    calcNewVel(\n      circle2.mass,\n      circle1.mass,\n      c2Angle,\n      c1Angle,\n      c2VelMag,\n      c1VelMag,\n      aoc\n    )\n  );\n};\n\nconst pythagoreanResult = (a, b) => {\n  Math.sqrt(a * a + b * b);\n};\n\nconst findPointOfContact = (circle1, circle2) => {\n  if (circle2 instanceof Circle) {\n    const intersectX =\n      (circle1.posX * circle2.radius + circle2.posX * circle1.radius) /\n      (circle1.radius + circle2.radius);\n    const intersectY =\n      (circle1.posY * circle2.radius + circle2.posY * circle1.radius) /\n      (circle.radius + circle2.radius);\n    return [intersectX, intersectY];\n  }\n};\n\nconst findAngleOfCollision = (circle1, poc) => {\n  let aoc = Math.atan((poc[0] - circle1.posX) / (poc[1] - circle1.posY));\n  if (aoc < 0) {\n    aoc += 2 * Math.PI;\n  }\n  return aoc;\n};\n\nconst calcAngle = (velX, velY, velMag) => {\n  let angle = Math.acos(velX / velMag);\n  if (velY < 0) {\n    angle *= -1;\n  }\n  if (angle < 0) {\n    angle += 2 * Math.PI;\n  }\n  return angle;\n};\n\nconst calcNewVel = (mass1, mass2, angle1, angle2, velMag1, velMag2, aoc) => {\n  const velX =\n    (velMag1 * (mass1 - mass2) * Math.cos(angle1 - aoc) +\n      2 * mass2 * velMag2 * Math.cos(angle2 - aoc) / (mass1 + mass2)) *\n      Math.cos(aoc) +\n    velMag1 * Math.sin(angle1 - aoc) * Math.cos(aoc + Math.PI / 2);\n  const velY =\n    (velMag1 * (mass1 - mass2) * Math.cos(angle1 - aoc) +\n      2 * mass2 * velMag2 * Math.cos(angle2 - aoc) / (mass1 + mass2)) *\n      Math.sin(aoc) +\n    velMag1 * Math.sin(angle1 - aoc) * Math.sin(aoc + Math.PI / 2);\n  return [velX, velY];\n};\n\n// non-trig version - not working well. glancing blows seem to have\n// good angles but straight on collisons do nothing. also all collisions\n// are sticky. reference for the approach at the bottom.\n\n// const resolveCirCirCollision = (circle1, circle2) => {\n//   const norm = findNorm(circle1, circle2);\n//   const p = findMassVelRelation(circle1, circle2, norm);\n//   calcNewVel(circle1, circle2, p, norm);\n// };\n//\n// const calcNewVel = (circle1, circle2, p, norm) => {\n//   circle1.velX = circle1.velX - p * circle1.mass * norm[0];\n//   circle1.velY = circle1.velY - p * circle1.mass * norm[0];\n//   circle2.velX = circle2.velX - p * circle2.mass * norm[0];\n//   circle2.velY = circle2.velY - p * circle2.mass * norm[0];\n// };\n//\n// const findMassVelRelation = (circle1, circle2, norm) => {\n//   return (\n//     2 *\n//     (circle1.velX * norm[0] +\n//       circle1.velY * norm[1] -\n//       circle2.velX * norm[0] -\n//       circle2.velY * norm[1]) /\n//     (circle1.mass + circle2.mass)\n//   );\n// };\n//\n// const findNorm = (circle1, circle2) => {\n//   const distBetween = findDistBetween(circle1, circle2);\n//   const normX = (circle2.posX - circle1.posX) / distBetween;\n//   const normY = (circle2.posY - circle1.posY) / distBetween;\n//   return [normX, normY];\n// };\n//\n// const findDistBetween = (circle1, circle2) => {\n//   return Math.sqrt(\n//     (circle1.posX - circle2.posX) * (circle1.posX - circle2.posX) +\n//       (circle1.posY - circle2.posY) * (circle1.posY - circle2.posY)\n//   );\n// };\n//\n\n// http://ericleong.me/research/circle-circle/#dynamic-circle-circle-collision\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collision_resolver.js\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}