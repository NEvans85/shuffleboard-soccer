{"version":3,"sources":["webpack:///webpack/bootstrap 69c946ed3e33ee141f31","webpack:///./lib/Entities/circle.js","webpack:///./lib/Entities/wall.js","webpack:///./lib/Entities/ball.js","webpack:///./lib/Entities/entity.js","webpack:///./lib/game_entities.js","webpack:///./lib/Entities/puck.js","webpack:///./lib/util.js","webpack:///./lib/Entities/goal.js","webpack:///./lib/Entities/zone.js","webpack:///./lib/Entities/arrow.js","webpack:///./lib/player.js","webpack:///./lib/game.js","webpack:///./lib/environment.js","webpack:///./lib/ui.js","webpack:///./lib/bg_image.js","webpack:///./lib/collision_detector.js","webpack:///./lib/collision_resolver.js","webpack:///./lib/render.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;AACuB;;AAEvB;AACA;AACA;AACA,2BAA2B;AAC3B,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChCA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACZA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;;;;;;;;ACtDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACuB;AACI;AAC4B;AAClC;AACrB;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;ACtDA;AACqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACRA;AAC2B;AAC3B;;AAEA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AClBA;AACA;AAC0C;;AAE1C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,oBAAoB;AAC1C,sBAAsB,qBAAqB;AAC3C,sBAAsB,cAAc;AACpC;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 69c946ed3e33ee141f31","import Entity from \"./entity\";\nimport Wall from \"./wall\";\nimport { calcDistance } from \"../util\";\n\nclass Circle extends Entity {\n  constructor(initialParams) {\n    super(initialParams);\n    const defaultParams = { radius: 20 };\n    const newParams = Object.assign({}, defaultParams, initialParams);\n    this.radius = newParams.radius;\n  }\n\n  inCollisionWith(entity) {\n    if (entity instanceof Circle) {\n      const a = entity.posX - this.posX;\n      const b = entity.posY - this.posY;\n      const c = this.radius + entity.radius;\n      return c * c >= a * a + b * b;\n    } else if (entity instanceof Wall) {\n      return (\n        entity.posX <= this.posX + this.radius &&\n        entity.endPosX >= this.posX - this.radius &&\n        entity.posY <= this.posY + this.radius &&\n        entity.endPosY >= this.posY - this.radius\n      );\n    }\n  }\n  contains(pos) {\n    return calcDistance([this.posX, this.posY], pos) <= this.radius;\n  }\n}\n\nexport default Circle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/circle.js\n// module id = 0\n// module chunks = 0","import Entity from \"./entity.js\";\n\nclass Wall extends Entity {\n  constructor(startPos, endPos, dir) {\n    const params = { posX: startPos[0], posY: startPos[1] };\n    super(params);\n    this.endPosX = endPos[0];\n    this.endPosY = endPos[1];\n    this.dir = dir;\n  }\n}\n\nexport default Wall;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/wall.js\n// module id = 1\n// module chunks = 0","import Circle from \"./circle\";\nimport Wall from \"./wall\";\n\nclass Ball extends Circle {\n  constructor(pos) {\n    const params = {\n      posX: pos[0],\n      posY: pos[1],\n      radius: 15,\n      fill: \"white\",\n      mass: 100,\n      frictionCoefficient: 0.99\n    };\n    super(params);\n  }\n}\n\nexport default Ball;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/ball.js\n// module id = 2\n// module chunks = 0","class Entity {\n  constructor(initialParams) {\n    const defaultParams = {\n      posX: 0,\n      posY: 0,\n      velX: 0,\n      velY: 0,\n      mass: 0,\n      fill: \"#000000\",\n      owner: null\n    };\n\n    const newParams = Object.assign({}, defaultParams, initialParams);\n    this.posX = newParams.posX;\n    this.posY = newParams.posY;\n    this.initPosX = newParams.posX;\n    this.initPosY = newParams.posY;\n    this.velX = newParams.velX;\n    this.velY = newParams.velY;\n    this.frictionCoefficient = newParams.frictionCoefficient;\n    this.mass = newParams.mass;\n    this.fill = newParams.fill;\n    this.time = 16 / 1000;\n    this.owner = newParams.owner;\n  }\n\n  get nextFrame() {\n    if (this.velX !== 0 || this.velY !== 0) {\n      this.applyKineticFriction();\n    }\n    [this.posX, this.posY] = this.nextPosition();\n    return this;\n  }\n\n  nextPosition() {\n    let posX = this.posX;\n    let posY = this.posY;\n    const velX = this.velX;\n    const velY = this.velY;\n\n    posX += velX * this.time;\n    posY += velY * this.time;\n    return [posX, posY];\n  }\n\n  applyKineticFriction() {\n    this.velX *= this.frictionCoefficient;\n    this.velY *= this.frictionCoefficient;\n\n    if (Math.abs(this.velX) < 5) {\n      this.velX = 0;\n    }\n    if (Math.abs(this.velY) < 5) {\n      this.velY = 0;\n    }\n  }\n\n  setPosition(newPos) {\n    this.posX = newPos[0];\n    this.posY = newPos[1];\n  }\n\n  setVelocity(newVel) {\n    this.velX = newVel[0];\n    this.velY = newVel[1];\n  }\n\n  reset() {\n    this.posX = this.initPosX;\n    this.posY = this.initPosY;\n    this.velX = 0;\n    this.velY = 0;\n  }\n}\n\nexport default Entity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/entity.js\n// module id = 3\n// module chunks = 0","import Puck from \"./Entities/puck\";\nimport Ball from \"./Entities/ball\";\nimport Wall from \"./Entities/wall\";\nimport Goal from \"./Entities/goal\";\nimport Player from \"./player\";\n\nconst p1 = new Player(\"Red Player\", \"red\");\nconst p2 = new Player(\"Blue Player\", \"blue\");\nexport const playerList = [p1, p2];\nconst pucks = [\n  new Puck([220, 310], p1),\n  new Puck([220, 440], p1),\n  new Puck([360, 250], p1),\n  new Puck([360, 500], p1),\n  new Puck([400, 375], p1),\n  new Puck([600, 375], p2),\n  new Puck([640, 250], p2),\n  new Puck([640, 500], p2),\n  new Puck([780, 310], p2),\n  new Puck([780, 440], p2)\n];\nconst walls = [\n  new Wall([150, 150], [850, 150], \"h\"),\n  new Wall([75, 290], [150, 290], \"h\"),\n  new Wall([75, 460], [150, 460], \"h\"),\n  new Wall([150, 600], [850, 600], \"h\"),\n  new Wall([850, 460], [925, 460], \"h\"),\n  new Wall([850, 290], [925, 290], \"h\"),\n  new Wall([150, 150], [150, 290], \"v\"),\n  new Wall([75, 290], [75, 460], \"v\"),\n  new Wall([150, 460], [150, 600], \"v\"),\n  new Wall([850, 460], [850, 600], \"v\"),\n  new Wall([925, 290], [925, 460], \"v\"),\n  new Wall([850, 150], [850, 290], \"v\")\n];\nconst zones = [\n  new Goal({\n    posX: 75,\n    posY: 290,\n    height: 170,\n    width: 75,\n    fill: \"grey\",\n    owner: p2\n  }),\n  new Goal({\n    posX: 850,\n    posY: 290,\n    height: 170,\n    width: 75,\n    fill: \"grey\",\n    owner: p1\n  })\n];\nconst ball = [new Ball([500, 375])];\nexport const gameEntities = pucks.concat(ball, zones, walls);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_entities.js\n// module id = 4\n// module chunks = 0","import Circle from \"./circle\";\n\nclass Puck extends Circle {\n  constructor(pos, owner) {\n    const params = {\n      radius: 25,\n      mass: 100,\n      posX: pos[0],\n      posY: pos[1],\n      frictionCoefficient: 0.985,\n      owner: owner,\n      fill: owner.color\n    };\n    super(params);\n  }\n}\n\nexport default Puck;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/puck.js\n// module id = 5\n// module chunks = 0","export const calcDistance = (pos1, pos2) => {\n  return pythagoreanResult(pos2[0] - pos1[0], pos2[1] - pos1[1]);\n};\n\nexport const pythagoreanResult = (a, b) => {\n  return Math.sqrt(a * a + b * b);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 6\n// module chunks = 0","import Zone from \"./zone\";\n\nclass Goal extends Zone {\n  constructor(initialParams) {\n    const defaultParams = {\n      height: 170,\n      width: 75\n    };\n    const newParams = Object.assign({}, initialParams, defaultParams);\n    super(newParams);\n  }\n}\n\nexport default Goal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/goal.js\n// module id = 7\n// module chunks = 0","import Ball from \"./ball\";\n\nclass Zone {\n  constructor(initialParams) {\n    const defaultParams = {\n      posX: 0,\n      posY: 0,\n      height: 600,\n      width: 400\n    };\n    const newParams = Object.assign({}, defaultParams, initialParams);\n    this.height = newParams.height;\n    this.width = newParams.width;\n    this.posX = newParams.posX;\n    this.posY = newParams.posY;\n    this.fill = newParams.fill;\n    this.owner = newParams.owner;\n  }\n\n  contains(object) {\n    if (object instanceof Ball) {\n      return (\n        this.posX <= object.posX - object.radius &&\n        this.posX + this.width >= object.posX + object.radius &&\n        this.posY <= object.posY - object.radius &&\n        this.posY + this.height >= object.posY + object.radius\n      );\n    }\n    if (object instanceof Puck) {\n      return (\n        this.posX <= object.posX &&\n        this.posX + this.width >= object.posX &&\n        this.posY <= object.posY - object.radius &&\n        this.posY + this.height >= object.posY + object.radius\n      );\n    }\n  }\n}\n\nexport default Zone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/zone.js\n// module id = 8\n// module chunks = 0","class Arrow {\n  constructor(pos) {\n    this.startPosX = pos[0];\n    this.startPosY = pos[1];\n    this.endPosX = pos[0];\n    this.endPosY = pos[1];\n  }\n\n  setEndPos(pos) {\n    this.endPosX = pos[0];\n    this.endPosY = pos[1];\n  }\n}\n\nexport default Arrow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Entities/arrow.js\n// module id = 9\n// module chunks = 0","class Player {\n  constructor(name, color) {\n    this.name = name;\n    this.color = color;\n  }\n}\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 10\n// module chunks = 0","import Environment from \"./environment.js\";\nimport UI from \"./ui\";\nimport BGImage from \"./bg_image\";\nimport { gameEntities } from \"./game_entities\";\nimport { handleCollisions } from \"./collision_detector\";\nimport { render, clear, renderBackground, renderScore } from \"./render\";\nimport { playerList } from \"./game_entities\";\nimport Player from \"./player\";\n\nclass Game {\n  constructor() {\n    this.score = { [playerList[0].name]: 0, [playerList[1].name]: 0 };\n    this.environment = new Environment();\n    this.canvas = document.createElement(\"canvas\");\n    this.context = this.canvas.getContext(\"2d\");\n    this.images = [];\n    this.preloadImages();\n    this.setupCanvas();\n    this.ui = new UI(this.environment);\n    this.startEventListeners();\n    this.viewInstructions = true;\n\n    this.setupCanvas = this.setupCanvas.bind(this);\n    this.startEventListeners = this.startEventListeners.bind(this);\n    this.startAnimation = this.startAnimation.bind(this);\n    this.nextFrame = this.nextFrame.bind(this);\n  }\n\n  preloadImages() {\n    let field = new Image();\n    field.onload = () => {\n      this.context.drawImage(field, 150, 150);\n    };\n    field.src =\n      \"https://res.cloudinary.com/arcane-lab/image/upload/c_crop,w_700/v1507304625/soccerField_wzwnds.png\";\n    const bgField = new BGImage(field, [150, 150]);\n    this.images.push(bgField);\n    let scoreboard = new Image();\n    scoreboard.onload = () => {\n      this.context.drawImage(scoreboard, 250, 25);\n    };\n    scoreboard.src =\n      \"https://res.cloudinary.com/arcane-lab/image/upload/v1507311440/scoreboard-wide_x2gxad.png\";\n    const bgScoreboard = new BGImage(scoreboard, [250, 25]);\n    this.images.push(bgScoreboard);\n  }\n\n  setupCanvas() {\n    document.body.appendChild(this.canvas);\n    this.canvas.width = 1025;\n    this.canvas.height = 700;\n    this.canvas.setAttribute(\"style\", \"border: 4px solid white;\");\n    gameEntities.forEach(entity => {\n      this.environment.addEntity(entity);\n    });\n    renderBackground(this.context, this.images);\n    this.environment.allEntities.forEach(entity => {\n      render(this.context, entity);\n    });\n    console.log(this.environment.movingEntities);\n  }\n  startEventListeners() {\n    this.canvas.onmousemove = e => this.ui.updateMousePos(e);\n    this.canvas.onmousedown = e => this.ui.handleMouseDown(e);\n    this.canvas.onmouseup = e => {\n      this.ui.handleMouseUp(e);\n    };\n  }\n\n  startAnimation() {\n    window.requestAnimationFrame(() => {\n      this.nextFrame();\n    });\n  }\n  nextFrame() {\n    clear(this.canvas, this.context);\n    renderBackground(this.context, this.images);\n    renderScore(this.context, this.score, this.ui.getCurrentPlayer());\n    let scorer = this.goal();\n    if (!scorer) {\n      this.environment.allEntities.forEach(entity => {\n        entity.nextFrame;\n        render(this.context, entity);\n      });\n      handleCollisions(this.environment);\n    } else {\n      this.environment.movingEntities.forEach(entity => {\n        entity.reset();\n        render(this.context, entity);\n      });\n      this.score[scorer] += 1;\n    }\n    window.requestAnimationFrame(this.nextFrame);\n  }\n\n  goal() {\n    let scorer = false;\n    this.environment.goals.forEach(goal => {\n      if (goal.contains(this.environment.ball)) {\n        scorer = goal.owner.name;\n      }\n    });\n    return scorer;\n  }\n\n  get over() {\n    return Object.values(this.score).includes(3);\n  }\n}\n\nconst game = new Game();\ngame.startAnimation();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 11\n// module chunks = 0","import Puck from \"./Entities/puck\";\nimport Ball from \"./Entities/ball\";\nimport Goal from \"./Entities/goal\";\nimport Circle from \"./Entities/entity\";\n\nclass Environment {\n  constructor() {\n    this.entities = {};\n    this.newEntitiesId = 0;\n  }\n\n  addEntity(entity) {\n    const id = this.newEntitiesId;\n    entity.id = id;\n    this.entities[id] = entity;\n    this.newEntitiesId += 1;\n    return id;\n  }\n\n  removeEntity(entityId) {\n    const deleted = this.entities[entityId];\n    delete this.entities[entityId];\n    return deleted;\n  }\n\n  get allEntities() {\n    return Object.values(this.entities);\n  }\n\n  get pucks() {\n    return this.allEntities.filter(entity => {\n      return entity instanceof Puck;\n    });\n  }\n\n  get ball() {\n    return this.allEntities.filter(entity => {\n      return entity instanceof Ball;\n    })[0];\n  }\n\n  get goals() {\n    return this.allEntities.filter(entity => {\n      return entity instanceof Goal;\n    });\n  }\n\n  get movingEntities() {\n    return this.allEntities.filter(entity => {\n      return entity instanceof Ball || entity instanceof Puck;\n    });\n  }\n}\n\nexport default Environment;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/environment.js\n// module id = 12\n// module chunks = 0","import Arrow from \"./Entities/arrow\";\nimport { playerList } from \"./game_entities\";\n\nclass UI {\n  constructor(environment) {\n    this.environment = environment;\n    this.mouseX = 0;\n    this.mouseY = 0;\n    this.dragging = false;\n    this.actionPuck = false;\n    this.arrow = null;\n    this.currentPlayer = playerList[0];\n    this.turnInProgress = false;\n    this.switchInterval = null;\n  }\n\n  updateMousePos(e) {\n    this.mouseX = e.offsetX;\n    this.mouseY = e.offsetY;\n    if (this.dragging) {\n      const endPosX =\n        this.actionPuck.posX + (this.actionPuck.posX - this.mouseX);\n      const endPosY =\n        this.actionPuck.posY + (this.actionPuck.posY - this.mouseY);\n      this.arrow.setEndPos([endPosX, endPosY]);\n    }\n  }\n\n  handleMouseDown(e, currentPlayer) {\n    if (!this.movingEntities()) {\n      this.environment.pucks.forEach(puck => {\n        if (\n          puck.owner === this.currentPlayer &&\n          puck.contains([e.offsetX, e.offsetY])\n        ) {\n          this.dragging = true;\n          this.actionPuck = puck;\n          this.arrow = new Arrow([puck.posX, puck.posY]);\n          this.environment.addEntity(this.arrow);\n        }\n      });\n    }\n  }\n\n  handleMouseUp(e) {\n    if (this.dragging) {\n      this.environment.removeEntity(this.arrow.id);\n      const velX = (this.arrow.startPosX - this.arrow.endPosX) * -5;\n      const velY = (this.arrow.startPosY - this.arrow.endPosY) * -5;\n      this.actionPuck.setVelocity([velX, velY]);\n      this.dragging = false;\n      this.arrow = null;\n      this.actionPuck = null;\n      const self = this;\n      this.playerSwitchWatch();\n    }\n  }\n\n  playerSwitchWatch() {\n    const self = this;\n    this.switchInterval = setInterval(() => {\n      if (!self.movingEntities()) {\n        self.switchPlayers();\n        clearInterval(self.switchInterval);\n      }\n    }, 1000);\n  }\n\n  switchPlayers() {\n    this.currentPlayer =\n      this.currentPlayer === playerList[0] ? playerList[1] : playerList[0];\n  }\n\n  movingEntities() {\n    let moving = false;\n    this.environment.movingEntities.forEach(entity => {\n      if (entity.velX !== 0 && entity.velY !== 0) {\n        moving = true;\n      }\n    });\n    return moving;\n  }\n\n  getCurrentPlayer() {\n    return this.currentPlayer.name;\n  }\n}\nexport default UI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ui.js\n// module id = 13\n// module chunks = 0","class BGImage {\n  constructor(image, pos) {\n    this.image = image;\n    this.posX = pos[0];\n    this.posY = pos[1];\n  }\n}\n\nexport default BGImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bg_image.js\n// module id = 14\n// module chunks = 0","import Circle from \"./Entities/circle\";\nimport { resolveCollision } from \"./collision_resolver\";\nimport Ball from \"./Entities/ball\";\n\nexport const handleCollisions = environment => {\n  const entities = environment.allEntities;\n  const count = entities.length;\n  for (var i = 0; i < count; i++) {\n    for (var j = i; j < count; j++) {\n      if (\n        i !== j &&\n        entities[i] instanceof Circle &&\n        entities[i].inCollisionWith(entities[j])\n      ) {\n        resolveCollision(entities[i], entities[j]);\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collision_detector.js\n// module id = 15\n// module chunks = 0","import Circle from \"./Entities/circle\";\nimport Wall from \"./Entities/wall\";\nimport { pythagoreanResult, calcDistance } from \"./util\";\n\nexport const resolveCollision = (circle, other) => {\n  if (other instanceof Circle) {\n    seperateCirCir(circle, other);\n    resolveCirCirCollision(circle, other);\n  } else if (other instanceof Wall) {\n    seperateCirWall(circle, other);\n    resolveCirWallCollision(circle, other);\n  }\n};\n\nconst seperateCirCir = (circle1, circle2) => {\n  let x1 = circle1.posX;\n  let x2 = circle2.posX;\n  let y1 = circle1.posY;\n  let y2 = circle2.posY;\n  const overlap =\n    circle1.radius + circle2.radius - calcDistance([x1, y1], [x2, y2]);\n  const aoc = findAngleOfCollision(circle1, circle2);\n  const overlapX = Math.abs(Math.cos(aoc) * overlap);\n  const overlapY = Math.abs(Math.sin(aoc) * overlap);\n  if (x1 > x2) {\n    x1 += overlapX / 4;\n    x2 -= overlapX / 4;\n  } else {\n    x1 -= overlapX / 4;\n    x2 += overlapX / 4;\n  }\n  if (y1 > y2) {\n    y1 += overlapY / 4;\n    y2 -= overlapY / 4;\n  } else {\n    y1 -= overlapY / 4;\n    y2 += overlapY / 4;\n  }\n  circle1.setPosition([x1, y1]);\n  circle2.setPosition([x2, y2]);\n};\n\nconst seperateCirWall = (circle, wall) => {\n  let posX = circle.posX;\n  let posY = circle.posY;\n  if (wall.dir == \"h\") {\n    posY =\n      circle.posY < wall.posY\n        ? wall.posY - circle.radius\n        : wall.posY + circle.radius;\n  } else {\n    posX =\n      circle.posX < wall.posX\n        ? wall.posX - circle.radius\n        : wall.posX + circle.radius;\n  }\n  circle.setPosition([posX, posY]);\n};\n\nconst resolveCirWallCollision = (circle, wall) => {\n  if (wall.posX === wall.endPosX) {\n    circle.velX *= -1;\n  } else {\n    circle.velY *= -1;\n  }\n};\n// trig version\n\nconst resolveCirCirCollision = (circle1, circle2) => {\n  const c1VelMag = pythagoreanResult(circle1.velX, circle1.velY);\n  const c2VelMag = pythagoreanResult(circle2.velX, circle2.velY);\n  const aoc = findAngleOfCollision(circle1, circle2);\n  const c1Direction = calcDirection(circle1.velX, circle1.velY);\n  const c2Direction = calcDirection(circle2.velX, circle2.velY);\n  circle1.setVelocity(\n    calcNewVel(\n      circle1.mass,\n      circle2.mass,\n      c1Direction,\n      c2Direction,\n      c1VelMag,\n      c2VelMag,\n      aoc\n    )\n  );\n  circle2.setVelocity(\n    calcNewVel(\n      circle2.mass,\n      circle1.mass,\n      c2Direction,\n      c1Direction,\n      c2VelMag,\n      c1VelMag,\n      aoc\n    )\n  );\n};\n\nconst findAngleOfCollision = (circle1, circle2) => {\n  return Math.atan2(circle1.posY - circle2.posY, circle1.posX - circle2.posX);\n};\n\nconst calcDirection = (xComp, yComp) => {\n  return Math.atan2(yComp, xComp);\n};\n\nconst calcNewVel = (mass1, mass2, dir1, dir2, velMag1, velMag2, aoc) => {\n  const velX =\n    (velMag1 * (mass1 - mass2) * Math.cos(dir1 - aoc) +\n      2 * mass2 * velMag2 * Math.cos(dir2 - aoc) / (mass1 + mass2)) *\n      Math.cos(aoc) +\n    velMag1 * Math.sin(dir1 - aoc) * Math.cos(aoc + Math.PI / 2);\n  const velY =\n    (velMag1 * (mass1 - mass2) * Math.cos(dir1 - aoc) +\n      2 * mass2 * velMag2 * Math.cos(dir2 - aoc) / (mass1 + mass2)) *\n      Math.sin(aoc) +\n    velMag1 * Math.sin(dir1 - aoc) * Math.sin(aoc + Math.PI / 2);\n  return [velX, velY];\n};\n\n// non-trig version - not working well. glancing blows seem to have\n// good angles but straight on collisons do nothing. also all collisions\n// are rather sticky even if they work.\n// reference for the approach is at the bottom.\n\n// const resolveCirCirCollision = (circle1, circle2) => {\n//   const norm = findNorm(circle1, circle2);\n//   const p = findMassVelRelation(circle1, circle2, norm);\n//   calcNewVel(circle1, circle2, p, norm);\n// };\n//\n// const calcNewVel = (circle1, circle2, p, norm) => {\n//   circle1.velX = circle1.velX - p * circle1.mass * norm[0];\n//   circle1.velY = circle1.velY - p * circle1.mass * norm[0];\n//   circle2.velX = circle2.velX - p * circle2.mass * norm[0];\n//   circle2.velY = circle2.velY - p * circle2.mass * norm[0];\n// };\n//\n// const findMassVelRelation = (circle1, circle2, norm) => {\n//   return (\n//     2 *\n//     (circle1.velX * norm[0] +\n//       circle1.velY * norm[1] -\n//       circle2.velX * norm[0] -\n//       circle2.velY * norm[1]) /\n//     (circle1.mass + circle2.mass)\n//   );\n// };\n//\n// const findNorm = (circle1, circle2) => {\n//   const distBetween = findDistBetween(circle1, circle2);\n//   const normX = (circle2.posX - circle1.posX) / distBetween;\n//   const normY = (circle2.posY - circle1.posY) / distBetween;\n//   return [normX, normY];\n// };\n//\n// const findDistBetween = (circle1, circle2) => {\n//   return Math.sqrt(\n//     (circle1.posX - circle2.posX) * (circle1.posX - circle2.posX) +\n//       (circle1.posY - circle2.posY) * (circle1.posY - circle2.posY)\n//   );\n// };\n//\n\n// http://ericleong.me/research/circle-circle/#dynamic-circle-circle-collision\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collision_resolver.js\n// module id = 16\n// module chunks = 0","import Circle from \"./Entities/circle\";\nimport Wall from \"./Entities/wall\";\nimport Zone from \"./Entities/zone\";\nimport Arrow from \"./Entities/arrow\";\n\nexport const render = (context, entity) => {\n  if (entity instanceof Circle) {\n    context.beginPath();\n    context.arc(entity.posX, entity.posY, entity.radius, 0, 2 * Math.PI, false);\n    context.fillStyle = entity.fill;\n    context.fill();\n    context.lineWidth = 3;\n    context.strokeStyle = \"black\";\n    context.stroke();\n  } else if (entity instanceof Wall) {\n    context.beginPath();\n    context.moveTo(entity.posX, entity.posY);\n    context.lineTo(entity.endPosX, entity.endPosY);\n    context.stroke();\n  } else if (entity instanceof Zone) {\n    context.beginPath();\n    context.rect(entity.posX, entity.posY, entity.width, entity.height);\n    context.fillStyle = entity.fill;\n    context.lineWidth = 1;\n    context.strokeStyle = \"black\";\n    context.stroke();\n    context.strokeStyle = \"grey\";\n    for (var i = 1; i <= 6; i++) {\n      let posX = entity.posX + entity.width / 7 * i;\n      context.beginPath();\n      context.moveTo(posX, entity.posY);\n      context.lineTo(posX, entity.posY + entity.height);\n      context.stroke();\n    }\n    for (var i = 0; i < 15; i++) {\n      let posY = entity.posY + entity.height / 15 * i;\n      context.beginPath();\n      context.moveTo(entity.posX, posY);\n      context.lineTo(entity.posX + entity.width, posY);\n      context.stroke();\n    }\n  } else if (entity instanceof Arrow) {\n    context.beginPath();\n    context.strokeStyle = \"black\";\n    context.lineWidth = 3;\n    context.moveTo(entity.startPosX, entity.startPosY);\n    context.lineTo(entity.endPosX, entity.endPosY);\n    context.stroke();\n  }\n};\n\nexport const renderBackground = (context, images) => {\n  images.forEach(image => {\n    context.drawImage(image.image, image.posX, image.posY);\n  });\n};\n\nexport const renderScore = (context, score, currentPlayer) => {\n  context.beginPath();\n  context.arc(290, 63, 25, 0, 2 * Math.PI, false);\n  context.fillStyle = \"red\";\n  context.fill();\n  context.lineWidth = 1;\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.beginPath();\n  context.arc(710, 63, 25, 0, 2 * Math.PI, false);\n  context.fillStyle = \"blue\";\n  context.fill();\n  context.lineWidth = 1;\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  context.font = \"36px sans-serif\";\n  context.fillStyle = \"white\";\n  context.fillText(`${score[\"Red Player\"]}`, 280, 75);\n  context.fillText(`${score[\"Blue Player\"]}`, 700, 75);\n  context.fillText(`${currentPlayer}'s Turn`, 350, 75);\n};\n\nexport const clear = (canvas, context) => {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/render.js\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}